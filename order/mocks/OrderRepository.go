// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/swiggy-2022-bootcamp/cdp-team4/order/domain"
	errs "github.com/swiggy-2022-bootcamp/cdp-team4/order/utils/errs"

	mock "github.com/stretchr/testify/mock"
)

// OrderRepository is an autogenerated mock type for the OrderRepository type
type OrderRepository struct {
	mock.Mock
}

// DeleteOrderById provides a mock function with given fields: _a0
func (_m *OrderRepository) DeleteOrderById(_a0 int) *errs.AppError {
	ret := _m.Called(_a0)

	var r0 *errs.AppError
	if rf, ok := ret.Get(0).(func(int) *errs.AppError); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*errs.AppError)
		}
	}

	return r0
}

// FindOrderById provides a mock function with given fields: _a0
func (_m *OrderRepository) FindOrderById(_a0 int) (*domain.Order, *errs.AppError) {
	ret := _m.Called(_a0)

	var r0 *domain.Order
	if rf, ok := ret.Get(0).(func(int) *domain.Order); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Order)
		}
	}

	var r1 *errs.AppError
	if rf, ok := ret.Get(1).(func(int) *errs.AppError); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errs.AppError)
		}
	}

	return r0, r1
}

// FindOrderByUserId provides a mock function with given fields: _a0
func (_m *OrderRepository) FindOrderByUserId(_a0 int) (*domain.Order, *errs.AppError) {
	ret := _m.Called(_a0)

	var r0 *domain.Order
	if rf, ok := ret.Get(0).(func(int) *domain.Order); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Order)
		}
	}

	var r1 *errs.AppError
	if rf, ok := ret.Get(1).(func(int) *errs.AppError); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errs.AppError)
		}
	}

	return r0, r1
}

// InsertOrder provides a mock function with given fields: _a0
func (_m *OrderRepository) InsertOrder(_a0 domain.Order) (domain.Order, *errs.AppError) {
	ret := _m.Called(_a0)

	var r0 domain.Order
	if rf, ok := ret.Get(0).(func(domain.Order) domain.Order); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(domain.Order)
	}

	var r1 *errs.AppError
	if rf, ok := ret.Get(1).(func(domain.Order) *errs.AppError); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errs.AppError)
		}
	}

	return r0, r1
}

// UpdateOrder provides a mock function with given fields: _a0
func (_m *OrderRepository) UpdateOrder(_a0 domain.Order) (*domain.Order, *errs.AppError) {
	ret := _m.Called(_a0)

	var r0 *domain.Order
	if rf, ok := ret.Get(0).(func(domain.Order) *domain.Order); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Order)
		}
	}

	var r1 *errs.AppError
	if rf, ok := ret.Get(1).(func(domain.Order) *errs.AppError); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errs.AppError)
		}
	}

	return r0, r1
}
